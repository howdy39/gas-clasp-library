version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node:8.9.4
    working_directory: /home/circleci/project

  node_modules_cache_params: &node_modules_cache_params
    key: node_modules-{{ .Branch }}-{{ checksum "./package-lock.json" }}
    paths:
      - node_modules

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - run:
          name: Show system information.
          command: |
            echo "Node $(node -v)"
            echo "Npm $(npm -v)"
      - restore_cache:
          name: Restore Cache.
          <<: *node_modules_cache_params
      - run:
          name: Set up to Angular.
          command: npm install --no-save
          working_directory: ./
      - save_cache:
          name: Saving Cache.
          <<: *node_modules_cache_params
      - run:
          name: Run Lint.
          command: npm run lint
          working_directory: ./
      - run:
          name: Run Test.
          command: npm run test
          working_directory: ./
      - run:
          name: Run webpack build.
          command: npm run build
          working_directory: ./
      - run:
          name: Move dist directory.
          command: |
            mkdir -p attach_workspace
            cp -rp dist attach_workspace/dist
      - persist_to_workspace:
          root: attach_workspace
          paths:
            - dist
      - run: ls -la attach_workspace

  deploy:
    <<: *container_config
    steps:
      - checkout
      - attach_workspace:
          at: attach_workspace
      - run: ls -la attach_workspace/dist
      - run:
          name: Set up to Clasp.
          command: npm install -g clasp
          working_directory: ./
      - run:
          name: Deploy to GAS.
          command: |
            if [ ${CIRCLE_BRANCH} = "master" ]; then
              ./scripts/deploy-ci.sh
            else
              echo "${CIRCLE_BRANCH} isn't deploy branch."
            fi
workflows:
  version: 2
  build_deploy_workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build
